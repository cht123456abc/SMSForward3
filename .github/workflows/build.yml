name: Build APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Validate Android API compatibility
      run: |
        echo "üîç Validating Android API level compatibility..."
        MIN_SDK=$(grep 'minSdk' app/build.gradle | grep -o '[0-9]\+' | head -1)
        TARGET_SDK=$(grep 'targetSdk' app/build.gradle | grep -o '[0-9]\+' | head -1)
        echo "Detected minSdk: $MIN_SDK (Android 6.0+)"
        echo "Detected targetSdk: $TARGET_SDK"

        if [ "$MIN_SDK" -eq 23 ]; then
          echo "‚úÖ Minimum SDK correctly set to 23 (Android 6.0)"
        else
          echo "‚ùå Expected minSdk 23, found $MIN_SDK"
          exit 1
        fi

    - name: Run tests
      run: ./gradlew test
      
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/smsforward-v*.apk

    - name: Run Lint
      run: ./gradlew lint

    - name: Upload Lint Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: app/build/reports/lint-results-debug.html
