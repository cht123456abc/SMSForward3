name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.2)'
        required: true
        default: 'v1.0.2'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Setup signing (optional)
      run: |
        # 如果有签名密钥，则设置签名
        if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
          echo "Setting up signing..."
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > smsforward-release.keystore
          echo "storeFile=smsforward-release.keystore" > keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties
          echo "✅ Signing configured"
        else
          echo "⚠️ No signing keys found, building unsigned APK"
        fi

    - name: Build Release APK
      run: ./gradlew assembleRelease

    - name: Get version info
      id: version_info
      run: |
        # 获取版本名称（不包含后缀）
        VERSION_NAME=$(grep 'versionName' app/build.gradle | grep -v 'versionNameSuffix' | grep -v 'def versionName' | head -1 | sed 's/.*"\(.*\)".*/\1/')
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "Detected version name: $VERSION_NAME"

        # 获取标签版本
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG_VERSION="${{ github.event.inputs.version }}"
        else
          TAG_VERSION="${GITHUB_REF#refs/tags/}"
        fi
        echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT
        echo "Tag version: $TAG_VERSION"

    - name: Prepare release files
      run: |
        VERSION_NAME="${{ steps.version_info.outputs.version_name }}"

        # 检查并重命名APK文件
        APK_SOURCE="app/build/outputs/apk/release/smsforward-v${VERSION_NAME}.apk"
        if [ -f "$APK_SOURCE" ]; then
          echo "Found APK: $APK_SOURCE"
          sha256sum "$APK_SOURCE" > "${APK_SOURCE}.sha256"
        else
          echo "APK not found, checking directory contents:"
          ls -la app/build/outputs/apk/release/
          exit 1
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version_info.outputs.tag_version }}
        name: SMS Forward ${{ steps.version_info.outputs.tag_version }}
        body: |
          # SMS Forward App Release ${{ steps.version_info.outputs.tag_version }}

          ## 📱 应用信息
          - **版本**: ${{ steps.version_info.outputs.version_name }}
          - **包名**: com.cht.smsforward
          - **构建日期**: ${{ github.run_id }}
          - **目标 SDK**: 36 (Android 14+)
          - **最低 SDK**: 34 (Android 14)

          ## 🚀 主要功能
          - SMS 短信转发到邮箱
          - 通知拦截和处理
          - 邮件发送配置
          - 权限管理界面

          ## 📦 下载文件
          - **smsforward-v${{ steps.version_info.outputs.version_name }}.apk**: 用于直接安装的 APK 文件

          ## 📋 安装说明
          1. 下载 APK 文件
          2. 在 Android 设置中启用"未知来源安装"
          3. 安装 APK 文件
          4. 授予必要权限：通知访问、网络访问等

          ## ⚠️ 注意事项
          - 需要 Android 14 或更高版本
          - 首次使用需要配置通知权限

          ## 🐛 问题反馈
          如遇问题，请在 [GitHub Issues](https://github.com/${{ github.repository }}/issues) 报告。
        files: |
          app/build/outputs/apk/release/smsforward-v${{ steps.version_info.outputs.version_name }}.apk
          app/build/outputs/apk/release/smsforward-v${{ steps.version_info.outputs.version_name }}.apk.sha256
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
